{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\my-new-app\\\\src\\\\Home.jsx\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Field, Form, Formik, Formikprops } from 'formik';\nimport Button from \"react-bootstrap/Button\";\nimport { addFunc, getFunc } from \"./Backenddata\";\nimport './navbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home(_ref) {\n  let {\n    setShow\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"form\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: user && /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: '',\n          password: ''\n        },\n        validate: values => {\n          const errors = {};\n          console.log();\n          if (!values.name) {\n            errors.name = 'fill the blanks';\n          } else if (values.name < 4) {\n            errors.name = 'name must be of 3 characters';\n          }\n          if (!values.email) {\n            errors.all = 'fill the blanks';\n          } else if (values.email == '/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/') {\n            errors.all = 'enter valid format';\n          }\n          if (!values.password) {\n            errors.password = 'fill the blanks';\n          }\n          return errors;\n        },\n        onSubmit: async (values, _ref2) => {\n          let {\n            setErrors,\n            setSubmitting\n          } = _ref2;\n          if (values.email && values.password) {\n            try {\n              const response = await addFunc(values.email, values.password);\n            } catch (error) {\n              if (error.status === 422) {\n                setErrors({\n                  common: error.response.data.message\n                });\n              }\n              setSubmitting(false);\n            }\n          }\n        },\n        children: _ref3 => {\n          let {\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting\n            /* and other goodies */\n          } = _ref3;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              class: \"form-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Sign In Form\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                placeholder: \"Enter your email..\",\n                onChange: handleChange,\n                onBlur: handleBlur,\n                value: values.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 15\n              }, this), errors.email && touched.email && errors.email, /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                placeholder: \"Enter your password..\",\n                onChange: handleChange,\n                onBlur: handleBlur,\n                value: values.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 15\n              }, this), errors.password && touched.password && errors.password, /*#__PURE__*/_jsxDEV(Button, {\n                class: \"btn btn-outline-info\",\n                variant: \"primary\",\n                type: \"submit\",\n                value: \"Submit\",\n                onClick: handleSubmit,\n                children: \"Sign In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 11\n              }, this), errors && errors.common && /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 40\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 9\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n}\n_c = Home;\n;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","Field","Form","Formik","Formikprops","Button","addFunc","getFunc","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_ref","setShow","class","children","user","initialValues","email","password","validate","values","errors","console","log","name","all","onSubmit","_ref2","setErrors","setSubmitting","response","error","status","common","data","message","_ref3","touched","handleChange","handleBlur","handleSubmit","isSubmitting","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onBlur","value","variant","onClick","_c","$RefreshReg$"],"sources":["D:/React/my-new-app/src/Home.jsx"],"sourcesContent":["import React  from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport {Field,Form,Formik,Formikprops} from 'formik';\r\nimport  Button  from \"react-bootstrap/Button\";\r\nimport {addFunc,getFunc} from \"./Backenddata\";\r\nimport './navbar.css';\r\n\r\nfunction Home({setShow}){\r\n\r\n\r\n  \r\n  \r\n\r\n    return(\r\n         <div class=\"form\">\r\n          <>\r\n        \r\n        {user && (\r\n            <Formik\r\n        \r\n\r\n        initialValues={{email:'',password:''}}\r\n        validate={values => {\r\n          const errors = {};\r\n          console.log()\r\n          if(!values.name){\r\n              errors.name='fill the blanks';\r\n          }else if(values.name<4){\r\n              errors.name='name must be of 3 characters';\r\n          }\r\n          if(!values.email){\r\n              errors.all='fill the blanks';\r\n          }\r\n          else if(values.email=='/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/'){\r\n                 errors.all='enter valid format';\r\n              }\r\n              \r\n          if(!values.password){\r\n              errors.password='fill the blanks';\r\n          }\r\n          return errors;\r\n        \r\n        }}\r\n        \r\n        \r\n        \r\nonSubmit={async(values,{setErrors,setSubmitting}) => {\r\n         \r\n         if(values.email && values.password){\r\n            try{\r\n                const response = await addFunc(values.email,values.password)\r\n            }catch(error){\r\n                if(error.status===422){\r\n                   setErrors(\r\n                       {common : error.response.data.message}\r\n                    )\r\n\r\n                }\r\n               \r\n                setSubmitting(false);\r\n            }\r\n             }\r\n           \r\n            \r\n          \r\n         }\r\n           \r\n        \r\n            \r\n        }\r\n        >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          /* and other goodies */\r\n        }) => (\r\n        <div class=\"form-group\">\r\n          <form class=\"form-inline\">\r\n            \r\n            <h2>Sign In Form</h2>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder='Enter your email..'\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.email}\r\n            /><br></br>\r\n           {errors.email && touched.email && errors.email}\r\n           <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder='Enter your password..'\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.password}\r\n            /><br></br>\r\n            {errors.password && touched.password && errors.password}\r\n           \r\n           \r\n          <Button  class=\"btn btn-outline-info\" variant=\"primary\"  type=\"submit\" value=\"Submit\" onClick={handleSubmit}>\r\n            Sign In\r\n          </Button>\r\n\r\n          {errors && errors.common && (<span class=\"error\">{}</span>)}\r\n          </form>\r\n          </div>\r\n          \r\n        )}\r\n        </Formik>\r\n        )}\r\n        \r\n</>\r\n</div>\r\n)};\r\n \r\n\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}