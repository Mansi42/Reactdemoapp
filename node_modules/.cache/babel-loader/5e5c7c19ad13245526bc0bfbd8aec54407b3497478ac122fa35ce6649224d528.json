{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\my-new-app\\\\src\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Field, Form, Formik, Formikprops } from 'formik';\nimport Button from \"react-bootstrap/Button\";\nimport { postFunc, updateFunc, deleteFunc, getFunc } from \"./Backenddata\";\nimport './navbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home(_ref) {\n  _s();\n  let {\n    setShow\n  } = _ref;\n  const [user, setUser] = useState(null);\n  let navigate = useNavigate();\n  const newpath = () => {\n    let path = './Users';\n    navigate(path);\n  };\n  const getData = async id => {\n    let res = await getFunc(id);\n    if (res.status == 200) {\n      setUser(res.data);\n    }\n  };\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getData(id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"form\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: user && /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: user[0],\n        validate: values => {\n          const errors = {};\n          console.log();\n          if (!values.name) {\n            errors.name = 'fill the blanks';\n          } else if (values.name < 4) {\n            errors.name = 'name must be of 3 characters';\n          }\n          if (!values.email) {\n            errors.all = 'fill the blanks';\n          } else if (values.email == '/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/') {\n            errors.all = 'enter valid format';\n          }\n          if (!values.password) {\n            errors.password = 'fill the blanks';\n          }\n          return errors;\n        },\n        onSubmit: values => {\n          // console.log(values.name)\n          if (values.name && values.email && values.password && values.age && values.role) {\n            updateFunc(values._id, values.name, values.email, values.password, values.age, values.role);\n          }\n          newpath();\n        },\n        children: _ref2 => {\n          let {\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting\n            /* and other goodies */\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-sm-10\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              class: \"form-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Sign In Form\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                placeholder: \"Enter your email..\",\n                onChange: handleChange,\n                onBlur: handleBlur,\n                value: values.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 15\n              }, this), errors.email && touched.email && errors.email, /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                placeholder: \"Enter your password..\",\n                onChange: handleChange,\n                onBlur: handleBlur,\n                value: values.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 15\n              }, this), errors.password && touched.password && errors.password, /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                value: \"Submit\",\n                onClick: handleSubmit,\n                children: \"Sign In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 9\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n}\n_s(Home, \"nvgFCsMdu3SyvO8byr2ZaJiohjY=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Home;\n;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","Field","Form","Formik","Formikprops","Button","postFunc","updateFunc","deleteFunc","getFunc","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_ref","_s","setShow","user","setUser","navigate","newpath","path","getData","id","res","status","data","class","children","initialValues","validate","values","errors","console","log","name","email","all","password","onSubmit","age","role","_id","_ref2","touched","handleChange","handleBlur","handleSubmit","isSubmitting","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onBlur","value","variant","onClick","_c","$RefreshReg$"],"sources":["D:/React/my-new-app/src/Home.jsx"],"sourcesContent":["import React  from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport {Field,Form,Formik,Formikprops} from 'formik';\r\nimport  Button  from \"react-bootstrap/Button\";\r\nimport {postFunc,updateFunc,deleteFunc,getFunc} from \"./Backenddata\";\r\nimport './navbar.css';\r\n\r\nfunction Home({setShow}){\r\nconst [user, setUser] =useState(null);\r\n  let navigate = useNavigate();\r\n  const newpath = ()=>{\r\n    let path='./Users';\r\n    navigate(path);\r\n  }\r\n\r\n  const getData = async(id)=>{\r\n    let res = await getFunc(id);\r\n    if(res.status==200){\r\n        setUser(res.data)\r\n    }\r\n  }\r\n  const {id}=useParams();\r\n  useEffect(()=>{\r\n    getData(id)\r\n  },[])\r\n\r\n  \r\n\r\n    return(\r\n         <div class=\"form\">\r\n          <>\r\n        \r\n        {user && (\r\n            <Formik\r\n        \r\n\r\n        initialValues={user[0]}\r\n        validate={values => {\r\n          const errors = {};\r\n          console.log()\r\n          if(!values.name){\r\n              errors.name='fill the blanks';\r\n          }else if(values.name<4){\r\n              errors.name='name must be of 3 characters';\r\n          }\r\n          if(!values.email){\r\n              errors.all='fill the blanks';\r\n          }\r\n          else if(values.email=='/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/'){\r\n                 errors.all='enter valid format';\r\n              }\r\n              \r\n          if(!values.password){\r\n              errors.password='fill the blanks';\r\n          }\r\n          return errors;\r\n        \r\n        }}\r\n        \r\n        \r\n        \r\n        onSubmit={(values) => {\r\n          // console.log(values.name)\r\n         if(values.name && values.email && values.password && values.age && values.role){\r\n             updateFunc(values._id,values.name,values.email,values.password,values.age,values.role)\r\n             }\r\n           newpath();\r\n            \r\n          \r\n         }\r\n           \r\n        \r\n            \r\n        }\r\n        >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          /* and other goodies */\r\n        }) => (\r\n        <div class=\"col-sm-10\">\r\n          <form class=\"form-inline\">\r\n            \r\n            <h2>Sign In Form</h2>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder='Enter your email..'\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.email}\r\n            /><br></br>\r\n           {errors.email && touched.email && errors.email}\r\n           <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder='Enter your password..'\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.password}\r\n            /><br></br>\r\n            {errors.password && touched.password && errors.password}\r\n           \r\n           \r\n          <Button variant=\"primary\"  type=\"submit\" value=\"Submit\" onClick={handleSubmit}>\r\n            Sign In\r\n          </Button>\r\n          </form>\r\n          </div>\r\n          \r\n        )}\r\n        </Formik>\r\n        )}\r\n        \r\n</>\r\n</div>\r\n)};\r\n \r\n\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}