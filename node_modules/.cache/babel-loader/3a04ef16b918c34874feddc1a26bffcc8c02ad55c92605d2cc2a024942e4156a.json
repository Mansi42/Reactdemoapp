{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { getData } from \"../../services\";\nconst initialValues = {\n  users: [],\n  isError: false,\n  isFetching: false,\n  errorCode: 0,\n  errorMessage: \"\"\n};\nexport const getUsers = createAsyncThunk(\"users/getusers\", async (_, thunkAPI) => {\n  try {\n    const response = await getData();\n    if (response == 200) {\n      return response.data;\n    } else {\n      const message = response.message;\n      const status = response.status || 404;\n      return thunkAPI.rejectWithValue([status, message]);\n    }\n  } catch (e) {\n    if (e.status && e.message) {\n      const message = e.message;\n      const status = e.status;\n      return thunkAPI.rejectWithValue([status, message]);\n    }\n  }\n  console.log(\"error\", e.response.data);\n  thunkAPI.rejectWithValue([e.error, e.message]);\n});\nexport const UserReducer = createSlice({\n  name: \"users\",\n  initialState: initialValues,\n  reducers: {\n    clearState: state => {\n      console.log(\"manasssqw\");\n      state.isError = false;\n      state.errorCode = 0;\n      state.errorMessage = \"\";\n      state.isFetching = false;\n      return state;\n    }\n  },\n  extraReducers: {\n    [getUsers.fulfilled]: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      return state;\n    },\n    [getUsers.rejected]: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      return state;\n    },\n    [getUsers.pending]: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      state.isFetching = true;\n      return state;\n    }\n  }\n});\nexport const {\n  clearState\n} = UserReducer.actions;\nexport const {\n  extraReducers\n} = UserReducer.actions;\nexport const userSelector = state => state.users;","map":{"version":3,"names":["createAsyncThunk","createSlice","getData","initialValues","users","isError","isFetching","errorCode","errorMessage","getUsers","_","thunkAPI","response","data","message","status","rejectWithValue","e","console","log","error","UserReducer","name","initialState","reducers","clearState","state","extraReducers","fulfilled","_ref","payload","rejected","_ref2","pending","_ref3","actions","userSelector"],"sources":["D:/React/my-new-app/src/Redux/Reducers/UserReducer.jsx"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { getData } from \"../../services\";\r\n\r\nconst initialValues = {\r\n  users: [],\r\n  isError: false,\r\n  isFetching: false,\r\n  errorCode: 0,\r\n  errorMessage: \"\",\r\n};\r\n\r\nexport const getUsers = createAsyncThunk(\r\n  \"users/getusers\",\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const response = await getData();\r\n      if (response == 200) {\r\n        return response.data;\r\n      } else {\r\n        const message = response.message;\r\n        const status = response.status || 404;\r\n        return thunkAPI.rejectWithValue([status, message]);\r\n      }\r\n    } catch (e) {\r\n      if (e.status && e.message) {\r\n        const message = e.message;\r\n        const status = e.status;\r\n        return thunkAPI.rejectWithValue([status, message]);\r\n      }\r\n    }\r\n    console.log(\"error\", e.response.data);\r\n    thunkAPI.rejectWithValue([e.error, e.message]);\r\n  }\r\n);\r\n\r\nexport const UserReducer = createSlice({\r\n  name: \"users\",\r\n  initialState: initialValues,\r\n  reducers: {\r\n    clearState: (state) => {\r\n      console.log(\"manasssqw\");\r\n      state.isError = false;\r\n      state.errorCode = 0;\r\n      state.errorMessage = \"\";\r\n      state.isFetching = false;\r\n      return state;\r\n    },\r\n  },\r\n\r\n  extraReducers: {\r\n    [getUsers.fulfilled]: (state, { payload }) => {\r\n      return state;\r\n    },\r\n    [getUsers.rejected]: (state, { payload }) => {\r\n      return state;\r\n    },\r\n    [getUsers.pending]: (state, { payload }) => {\r\n      state.isFetching = true;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { clearState } = UserReducer.actions;\r\nexport const { extraReducers } = UserReducer.actions;\r\n\r\nexport const userSelector = (state) => state.users;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,OAAO,QAAQ,gBAAgB;AAExC,MAAMC,aAAa,GAAG;EACpBC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,KAAK;EACdC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE,CAAC;EACZC,YAAY,EAAE;AAChB,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGT,gBAAgB,CACtC,gBAAgB,EAChB,OAAOU,CAAC,EAAEC,QAAQ,KAAK;EACrB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMV,OAAO,EAAE;IAChC,IAAIU,QAAQ,IAAI,GAAG,EAAE;MACnB,OAAOA,QAAQ,CAACC,IAAI;IACtB,CAAC,MAAM;MACL,MAAMC,OAAO,GAAGF,QAAQ,CAACE,OAAO;MAChC,MAAMC,MAAM,GAAGH,QAAQ,CAACG,MAAM,IAAI,GAAG;MACrC,OAAOJ,QAAQ,CAACK,eAAe,CAAC,CAACD,MAAM,EAAED,OAAO,CAAC,CAAC;IACpD;EACF,CAAC,CAAC,OAAOG,CAAC,EAAE;IACV,IAAIA,CAAC,CAACF,MAAM,IAAIE,CAAC,CAACH,OAAO,EAAE;MACzB,MAAMA,OAAO,GAAGG,CAAC,CAACH,OAAO;MACzB,MAAMC,MAAM,GAAGE,CAAC,CAACF,MAAM;MACvB,OAAOJ,QAAQ,CAACK,eAAe,CAAC,CAACD,MAAM,EAAED,OAAO,CAAC,CAAC;IACpD;EACF;EACAI,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,CAAC,CAACL,QAAQ,CAACC,IAAI,CAAC;EACrCF,QAAQ,CAACK,eAAe,CAAC,CAACC,CAAC,CAACG,KAAK,EAAEH,CAAC,CAACH,OAAO,CAAC,CAAC;AAChD,CAAC,CACF;AAED,OAAO,MAAMO,WAAW,GAAGpB,WAAW,CAAC;EACrCqB,IAAI,EAAE,OAAO;EACbC,YAAY,EAAEpB,aAAa;EAC3BqB,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBR,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MACxBO,KAAK,CAACrB,OAAO,GAAG,KAAK;MACrBqB,KAAK,CAACnB,SAAS,GAAG,CAAC;MACnBmB,KAAK,CAAClB,YAAY,GAAG,EAAE;MACvBkB,KAAK,CAACpB,UAAU,GAAG,KAAK;MACxB,OAAOoB,KAAK;IACd;EACF,CAAC;EAEDC,aAAa,EAAE;IACb,CAAClB,QAAQ,CAACmB,SAAS,GAAG,CAACF,KAAK,EAAAG,IAAA,KAAkB;MAAA,IAAhB;QAAEC;MAAQ,CAAC,GAAAD,IAAA;MACvC,OAAOH,KAAK;IACd,CAAC;IACD,CAACjB,QAAQ,CAACsB,QAAQ,GAAG,CAACL,KAAK,EAAAM,KAAA,KAAkB;MAAA,IAAhB;QAAEF;MAAQ,CAAC,GAAAE,KAAA;MACtC,OAAON,KAAK;IACd,CAAC;IACD,CAACjB,QAAQ,CAACwB,OAAO,GAAG,CAACP,KAAK,EAAAQ,KAAA,KAAkB;MAAA,IAAhB;QAAEJ;MAAQ,CAAC,GAAAI,KAAA;MACrCR,KAAK,CAACpB,UAAU,GAAG,IAAI;MACvB,OAAOoB,KAAK;IACd;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAED;AAAW,CAAC,GAAGJ,WAAW,CAACc,OAAO;AACjD,OAAO,MAAM;EAAER;AAAc,CAAC,GAAGN,WAAW,CAACc,OAAO;AAEpD,OAAO,MAAMC,YAAY,GAAIV,KAAK,IAAKA,KAAK,CAACtB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}