{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\my-new-app\\\\src\\\\CheckEmail.jsx\",\n  _s = $RefreshSig$();\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./newdesign.css\";\nimport { emailFunc } from \"./Backenddata\";\nimport { Formik } from \"formik\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CheckEmail() {\n  _s();\n  let navigate = useNavigate();\n  const changePathto = () => {\n    let path = `/SendOtp`;\n    navigate(path);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"form\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"\"\n        },\n        validate: values => {\n          const errors = {};\n          console.log();\n          if (!values.email) {\n            errors.email = \"fill the blanks\";\n          } else if (values.email == \"/^w+([.-]?w+)*@w+([.-]?w+)*(.w{2,3})+$/\") {\n            errors.email = \"enter valid format\";\n          }\n          return errors;\n        },\n        onSubmit: values => {\n          // console.log(\"aduhb\");\n          // try {\n          //   console.log(await emailFunc(values.email));\n          //   if (values.email) {\n          //     console.log(await emailFunc(values.email));\n          //     const res = await emailFunc(values.email);\n\n          // if (res.status === 200) {\n          //   console.log(\"valid email\");\n          //console.log(response.data);\n\n          changePathto();\n        }\n        // } catch (error) {\n        //   console.log(\"error\", error);\n\n        //   setSubmitting(false);\n        // }\n        ,\n        children: _ref => {\n          let {\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n            verifyOtp\n            /* and other goodies */\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              class: \"form-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Forgot Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"checkEmail\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  name: \"email\",\n                  placeholder: \"Enter your email..\",\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  value: values.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this), errors.email && touched.email && errors.email, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 67\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  class: \"btn btn-outline-info\",\n                  variant: \"primary\",\n                  type: \"submit\",\n                  value: \"Submit\",\n                  onClick: handleSubmit,\n                  children: \"Verify Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 19\n                }, this), errors && errors.common && /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"error\",\n                  children: errors.common\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), \")\"]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(CheckEmail, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = CheckEmail;\nexport default CheckEmail;\nvar _c;\n$RefreshReg$(_c, \"CheckEmail\");","map":{"version":3,"names":["Button","emailFunc","Formik","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","CheckEmail","_s","navigate","changePathto","path","class","children","initialValues","email","validate","values","errors","console","log","onSubmit","_ref","touched","handleChange","handleBlur","handleSubmit","isSubmitting","verifyOtp","fileName","_jsxFileName","lineNumber","columnNumber","className","type","name","placeholder","onChange","onBlur","value","variant","onClick","common","_c","$RefreshReg$"],"sources":["D:/React/my-new-app/src/CheckEmail.jsx"],"sourcesContent":["import Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./newdesign.css\";\r\nimport { emailFunc } from \"./Backenddata\";\r\nimport { Formik } from \"formik\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction CheckEmail() {\r\n  let navigate = useNavigate();\r\n  const changePathto = () => {\r\n    let path = `/SendOtp`;\r\n    navigate(path);\r\n  };\r\n\r\n  return (\r\n    <div class=\"form\">\r\n      <>\r\n        <Formik\r\n          initialValues={{ email: \"\" }}\r\n          validate={(values) => {\r\n            const errors = {};\r\n            console.log();\r\n\r\n            if (!values.email) {\r\n              errors.email = \"fill the blanks\";\r\n            } else if (\r\n              values.email == \"/^w+([.-]?w+)*@w+([.-]?w+)*(.w{2,3})+$/\"\r\n            ) {\r\n              errors.email = \"enter valid format\";\r\n            }\r\n\r\n            return errors;\r\n          }}\r\n          onSubmit={(values) => {\r\n            // console.log(\"aduhb\");\r\n            // try {\r\n            //   console.log(await emailFunc(values.email));\r\n            //   if (values.email) {\r\n            //     console.log(await emailFunc(values.email));\r\n            //     const res = await emailFunc(values.email);\r\n\r\n            // if (res.status === 200) {\r\n            //   console.log(\"valid email\");\r\n            //console.log(response.data);\r\n\r\n            changePathto();\r\n          }}\r\n          // } catch (error) {\r\n          //   console.log(\"error\", error);\r\n\r\n          //   setSubmitting(false);\r\n          // }\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting,\r\n            verifyOtp,\r\n            /* and other goodies */\r\n          }) => (\r\n            <div class=\"form-group\">\r\n              <form class=\"form-inline\">\r\n                <h2>Forgot Password</h2>\r\n                <div className=\"checkEmail\">\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter your email..\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.email}\r\n                  />\r\n                  <br></br>\r\n                  {errors.email && touched.email && errors.email} <br></br>\r\n                  <Button\r\n                    class=\"btn btn-outline-info\"\r\n                    variant=\"primary\"\r\n                    type=\"submit\"\r\n                    value=\"Submit\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Verify Email\r\n                  </Button>\r\n                  {errors && errors.common && (\r\n                    <span class=\"error\">{errors.common}</span>\r\n                  )}\r\n                </div>\r\n              </form>\r\n            </div>\r\n          )}\r\n        </Formik>\r\n        )\r\n      </>\r\n    </div>\r\n  );\r\n}\r\nexport default CheckEmail;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}