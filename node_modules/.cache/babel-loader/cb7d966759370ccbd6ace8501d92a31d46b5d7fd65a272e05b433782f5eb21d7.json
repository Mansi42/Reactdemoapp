{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\my-new-app\\\\src\\\\CheckOtp.jsx\";\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./newdesign.css\";\nimport { validateYupSchema } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CheckOtp() {\n  verifyEmail = () => {\n    if (email == values.email) {\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Valid Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: verifyEmail(),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"checkEmail\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Enter email..\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"emailbtn\",\n            children: \"Verify Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = CheckOtp;\nexport default CheckOtp;\nvar _c;\n$RefreshReg$(_c, \"CheckOtp\");","map":{"version":3,"names":["Button","validateYupSchema","jsxDEV","_jsxDEV","Fragment","_Fragment","CheckOtp","verifyEmail","email","values","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","class","type","name","placeholder","id","_c","$RefreshReg$"],"sources":["D:/React/my-new-app/src/CheckOtp.jsx"],"sourcesContent":["import Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./newdesign.css\";\r\nimport { validateYupSchema } from \"formik\";\r\nfunction CheckOtp() {\r\n  verifyEmail = () => {\r\n    if (email == values.email) {\r\n      <div>\r\n        <p>Valid Email</p>\r\n      </div>;\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <center>\r\n        <h2>Forgot Password</h2>\r\n        <form onSubmit={verifyEmail()}>\r\n          <div class=\"checkEmail\">\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Enter email..\"\r\n            ></input>\r\n            <br></br>\r\n            <br></br>\r\n            <Button id=\"emailbtn\">Verify Email</Button>\r\n          </div>\r\n        </form>\r\n      </center>\r\n    </>\r\n  );\r\n}\r\nexport default CheckOtp;\r\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,OAAO,sCAAsC;AAC7C,OAAO,iBAAiB;AACxB,SAASC,iBAAiB,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC3C,SAASC,QAAQA,CAAA,EAAG;EAClBC,WAAW,GAAGA,CAAA,KAAM;IAClB,IAAIC,KAAK,IAAIC,MAAM,CAACD,KAAK,EAAE;MACzB,aAAAL,OAAA;QAAAO,QAAA,eACEP,OAAA;UAAAO,QAAA,EAAG;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACd;IACR;EACF,CAAC;EACD,oBACEX,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA;MAAAO,QAAA,gBACEP,OAAA;QAAAO,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACxBX,OAAA;QAAMY,QAAQ,EAAER,WAAW,EAAG;QAAAG,QAAA,eAC5BP,OAAA;UAAKa,KAAK,EAAC,YAAY;UAAAN,QAAA,gBACrBP,OAAA;YACEc,IAAI,EAAC,OAAO;YACZC,IAAI,EAAC,OAAO;YACZC,WAAW,EAAC;UAAe;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACpB,eACTX,OAAA;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,eACTX,OAAA;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,eACTX,OAAA,CAACH,MAAM;YAACoB,EAAE,EAAC,UAAU;YAAAV,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACvC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACA,iBACR;AAEP;AAACO,EAAA,GA3BQf,QAAQ;AA4BjB,eAAeA,QAAQ;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}