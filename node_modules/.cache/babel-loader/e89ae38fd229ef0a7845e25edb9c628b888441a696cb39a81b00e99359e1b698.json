{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { getData } from \"../../services\";\nconst initialValues = {\n  users: [],\n  isError: false,\n  isFetching: false,\n  errorCode: 0,\n  errorMessage: \"\"\n};\nexport const getUsers = createAsyncThunk(\"users/getusers\", async (_, thunkAPI) => {\n  try {\n    //   const response = await getData();\n    //   if (response == 200) {\n    //     return response.data;\n    //   } else {\n    //     const message = response.message;\n    //     const status = response.status || 404;\n    //     return thunkAPI.rejectWithValue([status, message]);\n    //   }\n  } catch (e) {\n    //   if (e.status && e.message) {\n    //     const message = e.message;\n    //     const status = e.status;\n    //     return thunkAPI.rejectWithValue([status, message]);\n  }\n}\n//   }\n);\n\nexport const UserReducer = createSlice({\n  name: \"users\",\n  initialState: initialValues,\n  reducers: {\n    clearState: state => {\n      console.log(\"manasssqw\");\n      state.isError = false;\n      state.errorCode = 0;\n      state.errorMessage = \"\";\n      state.isFetching = false;\n      return state;\n    }\n  }\n});\nexport const {\n  clearState\n} = UserReducer.actions;\nexport const userSelector = state => state.users;","map":{"version":3,"names":["createAsyncThunk","createSlice","getData","initialValues","users","isError","isFetching","errorCode","errorMessage","getUsers","_","thunkAPI","e","UserReducer","name","initialState","reducers","clearState","state","console","log","actions","userSelector"],"sources":["D:/React/my-new-app/src/Redux/Reducers/UserReducer.jsx"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { getData } from \"../../services\";\r\n\r\nconst initialValues = {\r\n  users: [],\r\n  isError: false,\r\n  isFetching: false,\r\n  errorCode: 0,\r\n  errorMessage: \"\",\r\n};\r\n\r\nexport const getUsers = createAsyncThunk(\r\n  \"users/getusers\",\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      //   const response = await getData();\r\n      //   if (response == 200) {\r\n      //     return response.data;\r\n      //   } else {\r\n      //     const message = response.message;\r\n      //     const status = response.status || 404;\r\n      //     return thunkAPI.rejectWithValue([status, message]);\r\n      //   }\r\n    } catch (e) {\r\n      //   if (e.status && e.message) {\r\n      //     const message = e.message;\r\n      //     const status = e.status;\r\n      //     return thunkAPI.rejectWithValue([status, message]);\r\n    }\r\n  }\r\n  //   }\r\n);\r\n\r\nexport const UserReducer = createSlice({\r\n  name: \"users\",\r\n  initialState: initialValues,\r\n  reducers: {\r\n    clearState: (state) => {\r\n      console.log(\"manasssqw\");\r\n      state.isError = false;\r\n      state.errorCode = 0;\r\n      state.errorMessage = \"\";\r\n      state.isFetching = false;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { clearState } = UserReducer.actions;\r\n\r\nexport const userSelector = (state) => state.users;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,OAAO,QAAQ,gBAAgB;AAExC,MAAMC,aAAa,GAAG;EACpBC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,KAAK;EACdC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE,CAAC;EACZC,YAAY,EAAE;AAChB,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGT,gBAAgB,CACtC,gBAAgB,EAChB,OAAOU,CAAC,EAAEC,QAAQ,KAAK;EACrB,IAAI;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACD,CAAC,OAAOC,CAAC,EAAE;IACV;IACA;IACA;IACA;EAAA;AAEJ;AACA;AAAA,CACD;;AAED,OAAO,MAAMC,WAAW,GAAGZ,WAAW,CAAC;EACrCa,IAAI,EAAE,OAAO;EACbC,YAAY,EAAEZ,aAAa;EAC3Ba,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MACxBF,KAAK,CAACb,OAAO,GAAG,KAAK;MACrBa,KAAK,CAACX,SAAS,GAAG,CAAC;MACnBW,KAAK,CAACV,YAAY,GAAG,EAAE;MACvBU,KAAK,CAACZ,UAAU,GAAG,KAAK;MACxB,OAAOY,KAAK;IACd;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAED;AAAW,CAAC,GAAGJ,WAAW,CAACQ,OAAO;AAEjD,OAAO,MAAMC,YAAY,GAAIJ,KAAK,IAAKA,KAAK,CAACd,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}