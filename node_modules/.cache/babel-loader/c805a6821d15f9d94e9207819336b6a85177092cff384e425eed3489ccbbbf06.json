{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\my-new-app\\\\src\\\\ShowModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ShowModal(_ref) {\n  _s();\n  let {\n    y,\n    show,\n    handleClose\n  } = _ref;\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetchdata();\n  }, []);\n  const fetchdata = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3000/users\");\n      const json = await response.json();\n      setData(json);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Modal heading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Woohoo, you're reading this text in a modal!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(ShowModal, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = ShowModal;\nexport default ShowModal;\nvar _c;\n$RefreshReg$(_c, \"ShowModal\");","map":{"version":3,"names":["React","useState","useEffect","Button","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","ShowModal","_ref","_s","y","show","handleClose","data","setData","fetchdata","response","fetch","json","error","console","log","children","onHide","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["D:/React/my-new-app/src/ShowModal.jsx"],"sourcesContent":["\r\nimport React, { useState , useEffect } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nfunction ShowModal({y , show , handleClose}) {\r\n  const [data, setData] = useState(null);\r\n \r\n \r\n  useEffect(() => {\r\n       fetchdata();\r\n    }, []);\r\n    \r\n const fetchdata = async() =>{\r\n   try{\r\n     const response=await fetch(\"http://localhost:3000/users\")\r\n     const json = await response.json()\r\n     setData(json)\r\n   }catch(error){\r\n     console.log(\"error\",error)\r\n   }\r\n }\r\n console.log(data)\r\n\r\n  return (\r\n  \r\n    <>\r\n      \r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ShowModal;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAGC,SAAS,QAAQ,OAAO;AACnD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,SAASC,SAASA,CAAAC,IAAA,EAA2B;EAAAC,EAAA;EAAA,IAA1B;IAACC,CAAC;IAAGC,IAAI;IAAGC;EAAW,CAAC,GAAAJ,IAAA;EACzC,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAGtCC,SAAS,CAAC,MAAM;IACXe,SAAS,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAET,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAU;IAC1B,IAAG;MACD,MAAMC,QAAQ,GAAC,MAAMC,KAAK,CAAC,6BAA6B,CAAC;MACzD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,EAAE;MAClCJ,OAAO,CAACI,IAAI,CAAC;IACf,CAAC,QAAMC,KAAK,EAAC;MACXC,OAAO,CAACC,GAAG,CAAC,OAAO,EAACF,KAAK,CAAC;IAC5B;EACF,CAAC;EACDC,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;EAEhB,oBAEET,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eAGElB,OAAA,CAACF,KAAK;MAACS,IAAI,EAAEA,IAAK;MAACY,MAAM,EAAEX,WAAY;MAAAU,QAAA,gBACrClB,OAAA,CAACF,KAAK,CAACsB,MAAM;QAACC,WAAW;QAAAH,QAAA,eACvBlB,OAAA,CAACF,KAAK,CAACwB,KAAK;UAAAJ,QAAA,EAAC;QAAa;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAc;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC3B,eACf1B,OAAA,CAACF,KAAK,CAAC6B,IAAI;QAAAT,QAAA,EAAC;MAA4C;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eACrE1B,OAAA,CAACF,KAAK,CAAC8B,MAAM;QAAAV,QAAA,gBACXlB,OAAA,CAACH,MAAM;UAACgC,OAAO,EAAC,WAAW;UAACC,OAAO,EAAEtB,WAAY;UAAAU,QAAA,EAAC;QAElD;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eACT1B,OAAA,CAACH,MAAM;UAACgC,OAAO,EAAC,SAAS;UAACC,OAAO,EAAEtB,WAAY;UAAAU,QAAA,EAAC;QAEhD;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACT,iBACP;AAEP;AAACrB,EAAA,CAxCQF,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AA0ClB,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}