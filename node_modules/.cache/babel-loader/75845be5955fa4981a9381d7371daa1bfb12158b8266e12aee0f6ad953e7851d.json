{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\my-new-app\\\\src\\\\CheckEmail.jsx\",\n  _s = $RefreshSig$();\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./newdesign.css\";\nimport { emailFunc } from \"./Backenddata\";\nimport { Formik } from \"formik\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CheckEmail() {\n  _s();\n  console.log(\"sdf\");\n  let navigate = useNavigate();\n  const changePathto = () => {\n    let path = \"./SendOtp\";\n    navigate(path);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\"\n      },\n      validate: values => {\n        const errors = {};\n        console.log();\n        if (!values.email) {\n          errors.email = \"fill the blanks\";\n        } else if (values.email == \"/^w+([.-]?w+)*@w+([.-]?w+)*(.w{2,3})+$/\") {\n          errors.email = \"enter valid format\";\n        }\n        return errors;\n      },\n      onSubmit: async (values, _ref) => {\n        let {\n          setErrors,\n          setSubmitting\n        } = _ref;\n        console.log(\"shdb\");\n        try {\n          if (values.email) {\n            const response = await emailFunc(values.email);\n            if (response.status === 200) {\n              console.log(response.data);\n              changePathto();\n            }\n          }\n        } catch (error) {\n          if (error.status === 422) {\n            setErrors({\n              common: error.message\n            });\n          }\n          console.log(error.message);\n          setSubmitting(false);\n        }\n      },\n      children: _ref2 => {\n        let {\n          values,\n          handleSubmit,\n          isSubmitting,\n          verifyOtp\n          /* and other goodies */\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"center\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Forgot Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"checkEmail\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  name: \"email\",\n                  placeholder: \"Enter email..\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  id: \"emailbtn\",\n                  onClick: handleSubmit,\n                  children: \"Verify Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(CheckEmail, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = CheckEmail;\nexport default CheckEmail;\nvar _c;\n$RefreshReg$(_c, \"CheckEmail\");","map":{"version":3,"names":["Button","emailFunc","Formik","useNavigate","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","CheckEmail","_s","console","log","navigate","changePathto","path","children","initialValues","email","validate","values","errors","onSubmit","_ref","setErrors","setSubmitting","response","status","data","error","common","message","_ref2","handleSubmit","isSubmitting","verifyOtp","fileName","_jsxFileName","lineNumber","columnNumber","class","type","name","placeholder","id","onClick","_c","$RefreshReg$"],"sources":["D:/React/my-new-app/src/CheckEmail.jsx"],"sourcesContent":["import Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./newdesign.css\";\r\nimport { emailFunc } from \"./Backenddata\";\r\nimport { Formik } from \"formik\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nfunction CheckEmail() {\r\n  console.log(\"sdf\");\r\n  let navigate = useNavigate();\r\n  const changePathto = () => {\r\n    let path = \"./SendOtp\";\r\n    navigate(path);\r\n  };\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{ email: \"\" }}\r\n        validate={(values) => {\r\n          const errors = {};\r\n          console.log();\r\n\r\n          if (!values.email) {\r\n            errors.email = \"fill the blanks\";\r\n          } else if (\r\n            values.email == \"/^w+([.-]?w+)*@w+([.-]?w+)*(.w{2,3})+$/\"\r\n          ) {\r\n            errors.email = \"enter valid format\";\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n        onSubmit={async (values, { setErrors, setSubmitting }) => {\r\n          console.log(\"shdb\");\r\n          try {\r\n            if (values.email) {\r\n              const response = await emailFunc(values.email);\r\n              if (response.status === 200) {\r\n                console.log(response.data);\r\n                changePathto();\r\n              }\r\n            }\r\n          } catch (error) {\r\n            if (error.status === 422) {\r\n              setErrors({ common: error.message });\r\n            }\r\n            console.log(error.message);\r\n\r\n            setSubmitting(false);\r\n          }\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          verifyOtp,\r\n          /* and other goodies */\r\n        }) => (\r\n          <div>\r\n            <center>\r\n              <h2>Forgot Password</h2>\r\n              <form>\r\n                <div class=\"checkEmail\">\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter email..\"\r\n                  ></input>\r\n                  <br></br>\r\n                  <br></br>\r\n                  <Button type=\"submit\" id=\"emailbtn\" onClick={handleSubmit}>\r\n                    Verify Email\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            </center>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\nexport default CheckEmail;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}